package asd.zxc;

import java.util.*;
import java_cup.runtime.*;

parser code {:
    public Hashtable<String, Integer> variables
        = new Hashtable<String, Integer>();
    public void report_error(String message, Object info) {

        StringBuilder m = new StringBuilder("Error");

        if (info instanceof java_cup.runtime.Symbol) {
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);

            if (s.left >= 0) {
                m.append(" in line "+(s.left+1));
                if (s.right >= 0)
                    m.append(", column "+(s.right+1));
            }
        }

        m.append(" : "+message);

        System.err.println(m);
    }

    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }
:};

init with {: scanner.init();              :};
scan with {: return scanner.next_token(); :};

terminal           SEMI, PLUS, MINUS, TIMES, DIVIDE, LPAREN, RPAREN;
terminal Integer   NUMBER;
terminal           EQUALS, PRINT;
terminal String    ID, SANDUNGA;

non terminal           SEMI, PLUS, MINUS, TIMES, DIVIDE, LPAREN, RPAREN;
non terminal Integer   NUMBER;
non terminal           EQUALS, PRINT;
non terminal String    ID, SANDUNGA;

nonterminal           SEMI, PLUS, MINUS, TIMES, DIVIDE, LPAREN, RPAREN;
nonterminal Integer   NUMBER;
nonterminal           EQUALS, PRINT;
nonterminal String    ID, SANDUNGA;

expr_list ::= expr_list expr_part
            | expr_part;